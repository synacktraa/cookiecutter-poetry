name: "setup-poetry-env"
description: "Composite action to setup the Python and poetry environment."

inputs:
  python-version:
    required: false
    description: "The python version to use"
    default: "3.11"

runs:
  using: "composite"
  steps:
    - name: Set up python
      uses: actions/setup-python@v5
      with:
        python-version: {% raw %}${{ inputs.python-version }}{% endraw %}

    - name: Install Poetry on Windows
      if: runner.os == 'Windows'
      env:
        POETRY_VERSION: "1.7.1"
      run: (Invoke-WebRequest -Uri https://install.python-poetry.org -UseBasicParsing).Content | python - -y
      shell: pwsh

    - name: Install Poetry on Linux/macOS
      if: runner.os != 'Windows'
      env:
        POETRY_VERSION: "1.7.1"
      run: curl -sSL https://install.python-poetry.org | python - -y
      shell: bash

    - name: Add Poetry to Path on Windows
      if: runner.os == 'Windows'
      run: echo "$env:APPDATA\Python\Scripts" | Out-File -Append -FilePath $env:GITHUB_PATH -Encoding utf8
      shell: pwsh

    - name: Add Poetry to Path on Linux/macOS
      if: runner.os != 'Windows'
      run: echo "$HOME/.local/bin" >> $GITHUB_PATH
      shell: bash

    - name: Configure Poetry virtual environment in project
      run: poetry config virtualenvs.in-project true
      shell: bash

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: {% raw %}venv-${{ runner.os }}-${{ inputs.python-version }}-${{ hashFiles('poetry.lock') }}{% endraw %}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction
      shell: bash
