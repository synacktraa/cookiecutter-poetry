name: {{ cookiecutter.branch_name|capitalize }}

on:
  push:
    branches:
      - {{ cookiecutter.branch_name }}
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: {% raw %}pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}{% endraw %}

      - name: Set up the environment
        uses: ./.github/actions/setup-poetry-env

      - name: Run checks
        run: make check

  tests-and-type-check:
    strategy:
      matrix:
        os: {{ cookiecutter._os_matrix }}
        python-version: {{ cookiecutter._python_version_matrix }}
      fail-fast: false
    runs-on: {% raw %}${{ matrix.os }}{% endraw %}
    defaults:
      run:
        shell: bash
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up the environment
        uses: ./.github/actions/setup-poetry-env
        with:
          python-version: {% raw %}${{ matrix.python-version }}{% endraw %}

      - name: Run tests
{%- if cookiecutter.codecov == "y"%}
        run: poetry run pytest tests --cov --cov-config=pyproject.toml --cov-report=xml
{%- else %}
        run: poetry run pytest tests
{%- endif %}

      - name: Check typing
        run: poetry run {{ cookiecutter.typechecking }}

{% if cookiecutter.codecov == "y" %}
      - name: Upload coverage reports to Codecov with GitHub Action on Python 3.11
        uses: codecov/codecov-action@v4
        if: {% raw %}${{ matrix.python-version == '3.11' }}{% endraw %}
        env:
          CODECOV_TOKEN: {% raw %}${{ secrets.CODECOV_TOKEN }}{% endraw %}
{%- endif %}

{%- if cookiecutter.mkdocs == "y" %}

  check-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up the environment
        uses: ./.github/actions/setup-poetry-env

      - name: Check if documentation can be built
        run: poetry run mkdocs build -s
{%- endif %}
